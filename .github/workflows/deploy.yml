name: Deploy to Production

on:
  push:
    branches: [dev]
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: "dev"

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    environment: Happi-RH

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT || 22 }}
          script: |
            set -e

            echo "🚀 Starting deployment..."

            # Navigate to project directory
            cd ${{ secrets.PROJECT_PATH || '/var/www/html/git_happiRH_back/' }}

            # Show current branch and latest commit
            echo "📍 Current status:"
            git branch --show-current
            git log --oneline -1

            # Pull latest changes
            echo "📥 Pulling latest changes..."
            git pull origin ${{ github.event.inputs.branch || 'dev' }}

            # Install/update Composer dependencies
            echo "📦 Installing Composer dependencies..."
            composer install --no-dev --optimize-autoloader --no-interaction

            # Install/update npm dependencies and build assets
            echo "🔧 Building frontend assets..."
            npm install --production
            npm run build

            # Clear all caches before migration
            echo "🧹 Clearing caches..."
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            php artisan route:clear

            # Run database migrations
            echo "🗄️ Running database migrations..."
            php artisan migrate --force

            # Optimize application
            echo "⚡ Optimizing application..."
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Set proper permissions
            echo "🔐 Setting permissions..."
            chown -R www-data:www-data storage bootstrap/cache
            chmod -R 775 storage bootstrap/cache

            # Restart services if needed (optional)
            if command -v supervisorctl >/dev/null 2>&1; then
              echo "🔄 Restarting queue workers..."
              supervisorctl restart all
            fi

            # Clear OPcache if available
            if php -m | grep -q "opcache"; then
              echo "🚀 Clearing OPcache..."
              php artisan optimize
            fi

            echo "✅ Deployment completed successfully!"
            echo "📊 Final status:"
            git log --oneline -1
            php artisan --version
